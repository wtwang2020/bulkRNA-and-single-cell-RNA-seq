## 没安装包小伙伴先安装一下
######01表示原发肿瘤样本，11表示正常样本，06表示转移样本这里无统计转移样本
#BiocManager::install("GDCRNATools")
library(GDCRNATools)
## 一、数据处理与下载----
project <- 'TCGA-BLCA'
TCGA_downloadpath <- 'D:/课本/与同学的合作项目/我自己/膀胱癌预后文章复现/数据'
sample_sheet_name <- "gdc_sample_sheet.2023-10-14.tsv" #下载后才知道
one_of_the_count_tsv <- "54d3e578-c36e-4a04-b3b8-d6e40de39c6a/65624a21-6b3a-46e1-bc5d-1fd0a071cb52.rna_seq.augmented_star_gene_counts.tsv" #打开其中的一个文件，注意/
## 下载表达矩阵
setwd(TCGA_downloadpath)
#gdcRNADownload(project.id = project, data.type = 'RNAseq', 
#               directory = TCGA_downloadpath)

#新建文件夹，用于分类存储数据。txt需使用Notepad软件打开，没有此软件的可以联系免费获取。
if (!file.exists("RawData")) {
  dir.create("RawData")
}                           ##用于存储count/TPM/差异表达矩阵等txt格式
#####本文将获得tumor样本在前，normal样本在后的Count矩阵和TPM矩阵-----####
library(data.table)
library(dplyr)
##读取样本文件信息存储到sample_sheet,注意这里更改你自己的文件名
sample_sheet <- fread(sample_sheet_name)
##取样本ID的前15个字符，例如：TCGA-DD-AACK-01,作为样本的barcode
##获取Barcode添加到sample_sheet的最后一列
sample_sheet$Barcode <- substr(sample_sheet$`Sample ID`,1,15)

##去除重复样本，一个样本的一个组织多次测序的数据
sample_sheet1 <- sample_sheet %>% filter(!duplicated(sample_sheet$Barcode))

##根据Barcode最后两位筛选样本，01表示原发肿瘤样本，11表示正常样本，06表示转移样本
sample_sheet2 <- sample_sheet1 %>% filter(grepl("01$|11$|06$",sample_sheet1$Barcode))
TCGA_anominate <- sample_sheet2
##创建一个数据框，包含"gene_id","gene_name","gene_type"三列，用于后续样本合并
#随意打开一个RawMatrix下面的文件夹及里面文件，注意更改你自己的文件名
TCGA_BLCA_Exp <- fread(paste0("./",one_of_the_count_tsv))
TCGA_BLCA_Exp <- TCGA_BLCA_Exp[!1:4,c("gene_id","gene_name","gene_type")]
##根据样本的文件信息，将所有样本合并成一个数据框
#####项目路径
for (i in 1:nrow(sample_sheet2)) {
  
  folder_name <- sample_sheet2$`File ID`[i]
  file_name <- sample_sheet2$`File Name`[i]
  sample_name <- sample_sheet2$Barcode[i]
  
  data1 <- fread(paste0("./",folder_name,"/",file_name))
  #unstranded代表count值；如果要保存TPM，则改为tpm_unstranded
  data2 <- data1[!1:4,c("gene_id","gene_name","gene_type","unstranded")] 
  colnames(data2)[4] <- sample_name
  
  TCGA_BLCA_Exp <- inner_join(TCGA_BLCA_Exp,data2)
  
}

library(edgeR)
library(limma)
library(DESeq2)

Test_Expr <- TCGA_BLCA_Exp[,-c(1,3)]
Test_Expr <- as.data.frame(Test_Expr)
#对重复基因名取平均表达量，然后将基因名作为行名
Test_Expr = avereps(Test_Expr[,-1],ID = Test_Expr$gene_name) #也可以不取平均，直接删除一个重复的基因表达数据
TCGA_Expr_data <- Test_Expr
#去除低表达的基因
Test_Expr = Test_Expr[rowMeans(Test_Expr)>1,] #根据自己的需要去除低表达基因，也可以卡其它阈值

#将样本分组
#TCGA Barcode的第14和15位代表了样本的类型，01是实体瘤，11是正常样本）
library(stringr)
tumor <- colnames(Test_Expr)[as.integer(substr(colnames(Test_Expr),14,15)) == 01]
normal <- colnames(Test_Expr)[as.integer(substr(colnames(Test_Expr),14,15)) == 11]

#将tumor样本和正常样本按顺序储存到一个矩阵中
tumor_sample <- Test_Expr[,tumor]
normal_sample <- Test_Expr[,normal]
exprSet_by_group <- cbind(tumor_sample,normal_sample)
group_list <- c(rep('tumor',ncol(tumor_sample)),rep('normal',ncol(normal_sample)))


#使用Limma进行差异分析，本文测试数据为counts值，因此需要标准化，
library(limma)
group_list = factor(group_list)
design <- model.matrix(~0+group_list)
rownames(design) = colnames(exprSet_by_group)
colnames(design) <- levels(group_list)

##差异分析
DGElist <- DGEList(counts = exprSet_by_group, group = group_list)
## 使用cpm值对低表达量的基因进行过滤
keep_gene <- rowSums( cpm(DGElist) > 1 ) >= 2 ## 过滤
DGElist <- DGElist[ keep_gene, , keep.lib.sizes = FALSE ]

##使用edgeR中的calcNormFactors函数和limma中voom函数对矩阵进行标准化
library(edgeR)
DGElist <- calcNormFactors( DGElist )
v <- voom(DGElist, design, plot = TRUE, normalize = "quantile")

##若是TPM数据或已标准化的数据，不需要再进行标准化
fit <- lmFit(v, design)
cont.matrix <- makeContrasts(contrasts = c('tumor-normal'), levels = design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2)

nrDEG_limma_voom <- topTable(fit2, coef = 'tumor-normal', n = Inf)
nrDEG_limma_voom <- na.omit(nrDEG_limma_voom)

#筛选显著性差异的基因
library(dplyr)
#这里使用logFC > 2 且adj.P.Val < 0.05的作为差异基因，可以根据自己需求调整。
nrDEG_limma_voom_signif <- nrDEG_limma_voom %>% filter(logFC > 2) %>% filter(adj.P.Val < 0.05)
save(nrDEG_limma_voom,file = "./RawData/nrDEG_limma_voom.Rdata")
save(nrDEG_limma_voom_signif,file = "./RawData/nrDEG_limma_voom_signif.Rdata")
#save(TCGA_BLCA_Exp,file = "./RawData/TCGA_BLCA_Exp.Rdata")
#原始矩阵和注释
save(TCGA_BLCA_Exp,file = "./RawData/TCGA_Expr_data只进行重复名合并.Rdata")
save(TCGA_BLCA_Exp,file = "./RawData/TCGA_anominate.Rdata")

#保存csv文件格式的全部差异基因
#write.csv(nrDEG_limma_voom, file = "./RawData/limma/all_limma.csv", row.names = TRUE)
#保存csv文件格式的logFC > 2 且adj.P.Val < 0.05筛选后差异基因
#write.csv(nrDEG_limma_voom_signif, file = "./RawData/limma/nrDEG_limma_voom_signif.csv", row.names = TRUE)
